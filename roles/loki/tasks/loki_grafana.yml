- name: Fetch existing Grafana Datasource ConfigMap
  k8s_info:
    api_version: v1
    kind: ConfigMap
    namespace: cattle-monitoring-system
    name: rancher-monitoring-grafana-datasource
  register: grafana_datasource_cm

- name: Convert YAML string to dictionary
  set_fact:
    datasource_dict: "{{ grafana_datasource_cm.resources[0].data['datasource.yaml'] | from_yaml }}"

- name: Check if Loki already exists
  set_fact:
    loki_exists: "{{ datasource_dict['datasources'] | selectattr('name', 'equalto', 'Loki') | list | length > 0 }}"

- name: Add Loki datasource if it doesn't exist
  set_fact:
    datasource_dict: "{{ datasource_dict | combine({'datasources': datasource_dict['datasources'] + [{'name': 'Loki', 'type': 'loki', 'uid': 'loki', 'url': 'http://loki-grafana-loki-query-frontend-headless.loki-system.svc.cluster.local:3100', 'access': 'proxy', 'jsonData': {'maxDataPoints': 500}}]}, recursive=True) }}"
  when: not loki_exists

- name: Convert dictionary back to YAML string
  set_fact:
    updated_datasource_yaml: "{{ datasource_dict | to_yaml }}"

- name: Update Grafana Datasource ConfigMap with new Loki datasource
  k8s:
    api_version: v1
    kind: ConfigMap
    namespace: cattle-monitoring-system
    name: rancher-monitoring-grafana-datasource
    definition:
      data:
        datasource.yaml: "{{ updated_datasource_yaml }}"
